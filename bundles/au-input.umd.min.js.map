{"version":3,"file":"au-input.umd.min.js","sources":["../../out-tsc/lib/src/common/input-ref.directive.ts","../../out-tsc/lib/src/common/common.css.ts","../../out-tsc/lib/src/common/default-theme.css.ts","../../out-tsc/lib/src/au-fa-input/au-fa-input.component.ts","../../out-tsc/lib/src/au-md-input/au-md-input.component.css.ts","../../out-tsc/lib/src/au-md-input/au-md-input.component.ts","../../out-tsc/lib/src/module.ts"],"sourcesContent":["import {Directive, HostListener} from '@angular/core';\nexport class InputRefDirective {\r\n\r\n    focus = false;\n/**\n * @return {?}\n */\nonFocus() {\r\n        this.focus = true;\r\n    }\n/**\n * @return {?}\n */\nonBlur() {\r\n        this.focus = false;\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: '[auInput]'\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onFocus': [{ type: HostListener, args: ['focus', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n};\n}\n\nfunction InputRefDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nInputRefDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInputRefDirective.ctorParameters;\n/** @type {?} */\nInputRefDirective.propDecorators;\n/** @type {?} */\nInputRefDirective.prototype.focus;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\r\nexport const /** @type {?} */ commonCss = `\r\n\r\n.icon {\r\n    width:20px;\r\n    text-align: center;\r\n    padding-left: 5px;\r\n    padding-right: 2px;\r\n    border:none;\r\n}\r\n\r\n:host {\r\n    border-width:1px;\r\n    border-style: solid;\r\n    padding: 1px 0;\r\n    display: inline-block;\r\n}\r\n\r\n:host(.input-focus) {\r\n    outline:none;\r\n}\r\n\r\n:host /deep/ input {\r\n    border:none;\r\n    outline: none;\r\n    height: 100%;\r\n    margin: 1px 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\n`;\r\n\r\n","\r\nexport const /** @type {?} */ defaultThemeCss = `\r\n\r\n:host {\r\n  background: white;\r\n  border-color: lightgray;\r\n}\r\n\r\n:host(.input-focus) {\r\n  border-color: #4D90FE;\r\n  -webkit-box-shadow: 0px 0px 5px  #4D90FE;\r\n  box-shadow: 0px 0px 5px  #4D90FE;\r\n}\r\n\r\n`;\r\n\r\n","import {Component, Input, ContentChild, AfterContentInit, HostBinding} from '@angular/core';\r\nimport {InputRefDirective} from '../common/input-ref.directive';\r\nimport {commonCss} from '../common/common.css';\r\nimport {defaultThemeCss} from '../common/default-theme.css';\nexport class AuFaInputComponent implements AfterContentInit {\r\n\r\n    \r\n    icon: string;\r\n\r\n    \r\n    input: InputRefDirective;\n/**\n * @return {?}\n */\nngAfterContentInit() {\r\n        if (!this.input) {\r\n            console.error('the au-fa-input needs an input inside its content');\r\n        }\r\n    }\n/**\n * @return {?}\n */\nget isInputFocus() {\r\n        return this.input ? this.input.focus : false;\r\n    }\n/**\n * @return {?}\n */\nget classes() {\r\n\r\n        const /** @type {?} */ cssClasses = {};\r\n\r\n        if (this.icon) {\r\n            cssClasses['fa-' + this.icon] = true;\r\n        }\r\n\r\n        return cssClasses;\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n    selector: 'au-fa-input',\r\n    template: `\r\n\r\n        <i class=\"icon fa\" [ngClass]=\"classes\"></i>\r\n        \r\n        <ng-content select=\"input\"></ng-content>\r\n        \r\n    `,\r\n    styles: [ commonCss, defaultThemeCss ]\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'icon': [{ type: Input },],\n'input': [{ type: ContentChild, args: [InputRefDirective, ] },],\n'isInputFocus': [{ type: HostBinding, args: ['class.input-focus', ] },],\n};\n}\n\nfunction AuFaInputComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nAuFaInputComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuFaInputComponent.ctorParameters;\n/** @type {?} */\nAuFaInputComponent.propDecorators;\n/** @type {?} */\nAuFaInputComponent.prototype.icon;\n/** @type {?} */\nAuFaInputComponent.prototype.input;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\r\n\r\nexport const /** @type {?} */ mdInputStyles = `\r\n\r\n.md-icon {\r\n    font-family: 'Material Icons';\r\n    text-rendering: optimizeLegibility;\r\n    font-feature-settings: \"liga\" 1;\r\n    text-transform: none;\r\n    font-size: 21px;\r\n    width: 24px;\r\n    height: 24px;\r\n    overflow: hidden;\r\n    line-height: 21px;\r\n    vertical-align: middle;\r\n    font-style: normal;\r\n}\r\n\r\n\r\n\r\n`;\r\n\r\n","import {Component, Input, ContentChild, AfterContentInit, HostBinding} from '@angular/core';\r\nimport {InputRefDirective} from '../common/input-ref.directive';\r\nimport {commonCss} from '../common/common.css';\r\nimport {defaultThemeCss} from '../common/default-theme.css';\r\nimport {mdInputStyles} from './au-md-input.component.css';\nexport class AuMdInputComponent implements AfterContentInit {\r\n\r\n    \r\n    icon: string;\r\n\r\n    \r\n    input: InputRefDirective;\n/**\n * @return {?}\n */\nngAfterContentInit() {\r\n        if (!this.input) {\r\n            console.error(\"the au-md-input needs an input inside its content\");\r\n        }\r\n    }\n/**\n * @return {?}\n */\nget isInputFocus() {\r\n        return this.input ? this.input.focus : false;\r\n    }\r\n\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n    selector: 'au-md-input',\r\n    template: `\r\n\r\n        <i class=\"md-icon\" [innerHtml]=\"icon\"></i>\r\n        \r\n        <ng-content></ng-content>\r\n\r\n    `,\r\n    styles: [ commonCss, defaultThemeCss , mdInputStyles ]\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'icon': [{ type: Input },],\n'input': [{ type: ContentChild, args: [InputRefDirective, ] },],\n'isInputFocus': [{ type: HostBinding, args: ['class.input-focus', ] },],\n};\n}\n\nfunction AuMdInputComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nAuMdInputComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuMdInputComponent.ctorParameters;\n/** @type {?} */\nAuMdInputComponent.propDecorators;\n/** @type {?} */\nAuMdInputComponent.prototype.icon;\n/** @type {?} */\nAuMdInputComponent.prototype.input;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {AuFaInputComponent} from './au-fa-input/au-fa-input.component';\r\nimport {InputRefDirective} from './common/input-ref.directive';\r\nimport {AuMdInputComponent} from './au-md-input/au-md-input.component';\nexport class AuInputModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n    declarations: [AuFaInputComponent, InputRefDirective, AuMdInputComponent],\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    exports: [AuFaInputComponent, AuMdInputComponent, InputRefDirective]\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AuInputModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAuInputModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuInputModule.ctorParameters;\n}\n\r\n\r\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["this","InputRefDirective","focus","type","Directive","args","selector","onFocus","HostListener","onBlur","commonCss","defaultThemeCss","AuFaInputComponent","input","console","error","Object","cssClasses","icon","Component","template","styles","Input","ContentChild","isInputFocus","HostBinding","mdInputStyles","AuMdInputComponent","NgModule","declarations","imports","CommonModule","exports","AuInputModule"],"mappings":"0TACA,kBAAA,aAEIA,YAEQ,EA0BZ,MAxBAC,qBAAA,WACQD,KACKE,OAAQ,GAIrBD,mBAAA,WACQD,KAAKE,OAAQ,uBAInBC,KAAMC,YAAWC,OACfC,SAAU,gBAIbL,iBAAA,WAAA,UAEMA,kBAGPM,UAFcJ,KAAMK,eAAcH,MAAM,WAGxCI,SAFaN,KAAMK,eAAcH,MAAM,UC1BhC,IAAMK,GAAY,saCAZC,EAAkB,4NCG/B,cA0DA,MAhDAC,gCAAA,WACaZ,KAAKa,OACNC,QAAQC,MAAM,sDAM1BC,sBADKJ,gCACL,WACQ,QADOZ,KAAKa,OAAQb,KAAKa,MAAMX,uCAMvCc,sBAFKJ,2BAEL,WAEQ,GAFMK,KAQN,OAJIjB,MAFKkB,OAGLD,EAFW,MAAQjB,KAAKkB,OAAQ,GAG7BD,uDAIbd,KAAMgB,YAAWd,OAGfC,SAFU,cAGVc,SAFU,sIASVC,QAFUX,EAAWC,OAIxBC,iBAAA,WAAA,UAEMA,kBAKPM,OAJWf,KAAMmB,UAKjBT,QAJYV,KAAMoB,eAAclB,MAAMJ,KAKtCuB,eAJmBrB,KAAMsB,cAAapB,MAAM,uBCtDrC,IAAMqB,GAAgB,yVCG7B,cA8CA,MApCAC,gCAAA,WAEa3B,KAAKa,OAANC,QACQC,MAAM,sDAK1BC,sBAAKW,gCAAL,WACQ,QAAO3B,KAAKa,OAAQb,KAAKa,MAAMX,2DAKrCC,KAAMgB,YAAWd,OACfC,SAAU,cACVc,SAAU,8GAOVC,QAAUX,EAAWC,EAAkBe,OAI1CC,iBAAA,WAAA,UAEMA,kBAGPT,OAFWf,KAAMmB,UAGjBT,QAFYV,KAAMoB,eAAclB,MAAMJ,KAGtCuB,eAFmBrB,KAAMsB,cAAapB,MAAM,uBC1C5C,kBAAA,cAcA,2BAPEF,KAAMyB,WAAUvB,OALdwB,cAMcjB,EAAqBX,EAAmB0B,GALtDG,SACIC,gBAEJC,SAMSpB,EAAqBe,EAAoB1B,OAIrDgC,iBAAA,WAAA"}